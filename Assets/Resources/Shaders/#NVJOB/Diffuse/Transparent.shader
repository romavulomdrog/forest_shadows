Shader "#NVJOB/Shaders/Diffuse/Transparent" {

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	

Properties {
//----------------------------------------------

_Color ("Main Color", Color) = (1,1,1,1)
_Emission("Emission Color", Color) = (0, 0, 0, 1)
_MainTex ("Base (RGB)", 2D) = "white" {}
_BumpMap("Normalmap", 2D) = "bump" {}
_IntensityNm("Intensity Normalmap", Range(-20, 20)) = 1

//----------------------------------------------
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


SubShader {
///////////////////////////////////////////////////////////////////////////////////////////////////////////////

Tags {"Queue" = "Transparent" "IgnoreProjector" = "True" "RenderType" = "Transparent"}
LOD 200

CGPROGRAM
#pragma surface surf Lambert alpha:fade exclude_path:prepass nolightmap nometa noforwardadd nolppv noshadowmask noforwardadd interpolateview novertexlights

//----------------------------------------------

sampler2D _MainTex;
fixed4 _Color, _Emission;
sampler2D _BumpMap;
half _IntensityNm;

//----------------------------------------------

struct Input {
float2 uv_MainTex;
float2 uv_BumpMap;
};

//----------------------------------------------

void surf (Input IN, inout SurfaceOutput o) {
fixed4 c = tex2D(_MainTex, IN.uv_MainTex) * _Color;
o.Albedo = c.rgb;
o.Alpha = c.a * _Color.a;

fixed3 normal = UnpackNormal(tex2D(_BumpMap, IN.uv_BumpMap));
normal.x *= _IntensityNm;
normal.y *= _IntensityNm;
o.Normal = normalize(normal);

o.Emission = _Emission.rgb;
}

//----------------------------------------------

ENDCG

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

Fallback "Legacy Shaders/VertexLit"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
